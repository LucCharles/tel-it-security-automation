---

#5.1.2 Ensure permissions on /etc/crontab are configured
#5.2.3 Ensure permissions on SSH private host key files are configured
- name: 5.1.2 Ensure permissions on /etc/crontab are configured and 5.2.3 Ensure permissions on SSH private host keys
  file:
    path: "{{ item }}"
    state: touch
    owner: root
    group: root
    mode: 0600
  with_items:
    - /etc/crontab
    - /etc/ssh/ssh_host_rsa_key
    - /etc/ssh/ssh_host_ecdsa_key
    - /etc/ssh/ssh_host_ed25519_key
  when: 
    - config_req_07 | default(true)
    - ansible_check_mode == false

#5.1.3 Ensure permissions on /etc/cron.hourly are configured
#5.1.4 Ensure permissions on /etc/cron.daily are configured
#5.1.5 Ensure permissions on /etc/cron.weekly are configured
#5.1.6 Ensure permissions on /etc/cron.monthly are configured
#5.1.7 Ensure permissions on /etc/cron.d are configured
- name: 5.1.3-5.1.6 Ensure permissions on /etc/cron.{hourly, daily, wekkly, monthly, d} are configured
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0600
  with_items:
    - /etc/cron.hourly
    - /etc/cron.daily
    - /etc/cron.weekly
    - /etc/cron.monthly
    - /etc/cron.d
  when: 
    - config_req_07 | default(true)
    - ansible_check_mode == false

#1.5.3 Ensure authentication required for single user mode
- name: 1.5.3 Ensure authentication required for single user mode (rescue)
  lineinfile:
    dest: /usr/lib/systemd/system/rescue.service
    state: present
    regexp: '^ExecStart=*'
    line: 'ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue'
  when:
    - ansible_check_mode == false

- name: 1.5.3 Ensure authentication required for single user mode (emergency)
  lineinfile:
    dest: /usr/lib/systemd/system/emergency.service
    state: present
    regexp: '^ExecStart=*'
    line: 'ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency'
  when:
    - ansible_check_mode == false


#4.2.3 Ensure permissions on all logfiles are configured
#find /var/log -type f -exec chmod g-wx,o-rwx "{}" + -o -type d -exec chmod g-w,o-rwx "{}" +
- name: 4.2.3 Ensure permissions on all logfiles are configured (check)
  ansible.builtin.script: /usr/bin/find /var/log -type f -perm /037 -ls -o -type d -perm /026 -ls
  register: result_cis_4_2_3
  changed_when: false

- name: 4.2.3 Ensure permissions on all logfiles are configured (remediate)
  ansible.builtin.script: /usr/bin/find /var/log -type f -exec chmod g-wx,o-rwx "{}" + -o -type d -exec chmod g-w,o-rwx "{}" +
  when: 
    - result_cis_4_2_3.stdout != ""
    - ansible_check_mode == false

#1.11 Ensure system-wide crypto policy is FUTURE or FIPS
- name: 1.11 Ensure system-wide crypto policy is FUTURE or FIPS (check)
  ansible.builtin.replace:
    path: /etc/crypto-policies/config
    regexp: '^DEFAULT'
    replace: 'FUTURE'
  when:
    - ansible_check_mode == false
  tags: 
    - cis.1.11

#1.1.23 Disable USB Storage
- name: 1.1.23 Disable USB Storage (check)
  ansible.builtin.script: /usr/sbin/modprobe -n -v usb-storage
  register: result_cis_1_1_23
  tags:
    - cis.1.1.23

- name: 1.1.23 Disable USB Storage (configure)
  lineinfile:
    path: /etc/modprobe.d/usb-storage.conf
    state: present
    create: yes
    regexp: 'install usb-storage /bin/true'
    line: install usb-storage /bin/true
  when:
    - ansible_check_mode == false
    - result_cis_1_1_23.stdout != "install usb-storage /bin/true"
  notify: remove usb-storage
  tags:
    - cis.1.1.23

